#+TITLE: "Bind DNS服务器学习笔记"
#+AUTHOR: wanglifeng
#+OPTIONS: H:4 ^:nil
#+LATEX_CLASS: latex-doc
#+PAGE_TAGS: bind
#+PAGE_CATETORIES: network
#+PAGE_LAYOUT: post

#+HTML: <!--abstract-begin-->
DNS是构建互联网的基础，而bind是DNS服务器软件中历史最悠久，市场占用率最高的产品，在此纪录学习过程中的一些笔记。
#+HTML: <!--abstract-end-->

* DNS术语
** Root
DNS的根为英文句点"." , 目前全球共有12家组织，提供13个根服务器。比如通过在互联网任一Linux机器上使用dig +trace @8.8.8.8 www.baidu.com可以看到各根域名服务器情况。

根服务器分布如下:
#+BEGIN_EXAMPLE
A - VeriSign Global Registry Services
B - University of Southern California - Information Sciences Institute
C - Cogent Communications
D - University of Maryland
E - NASA Ames Research Center
F - Internet Systems Consortium, Inc.
G - U.S. DOD Network Information Center
H - U.S. Army Research Lab
I - Autonomica/NORDUnet
J - VeriSign Global Registry Services
K - RIPE NCC
L - ICANN
M - WIDE Project
#+END_EXAMPLE
** TLD域名
.com, .edu. .cn等均为顶级域名(TLD)，由域名机构管理者维护。一般申请者只能申请到二级域名，例如abc.com。
** Master
主DNS服务器，一般由其维护DNS纪录。
** Slave
从DNS服务器，一般通过zone transfer实现从主服务器自动同步，通讯端口为tcp 53。
** Forward
当本地不存在纪录时，是否向上游转发。典型的运营商的DNS服务器一般为forward only，本身不维护任何纪录，只负责向上游转发。
** Zone
一般一个域名就是一个zone，同时会有对应的zone文件用于维护纪录。
** 纪录类型
最常用的有如下几种，其他类型此处不再列出
*** A纪录
address的缩写，代表一个域名所对应的IP地址，最常用的类型
*** AAAA纪录
类似于A纪录，不过用于ipv6地址的解析
*** NS纪录
name server的缩写，一般用于指定DNS服务器的域名或者指派子域名
*** CNAME
canonical name的缩写，简单理解就是别名。比如各大互联网公司经常将其用于门户的入口，这样带来的好处是对外保持域名不变，通过映射关系实现灵活切换。通过如下命令可查看cname的一个示例:

#+BEGIN_SRC sh
dig @8.8.8.8 www.163.com
#+END_SRC

#+BEGIN_EXAMPLE
www.163.com.    0    IN    CNAME    www.163.com.lxdns.com.
www.163.com.lxdns.com.    0    IN    CNAME    163.xdwscache.ourglb0.com
163.xdwscache.ourglb0.com.    51    IN    A      183.134.16.86
163.xdwscache.ourglb0.com.    51    IN    A      115.231.22.80
#+END_EXAMPLE

代表www.163.com的别名为www.163.com.lxdns.com，同时www.163.com.lxdns.com的别名又指向163.xdwscache.ourglb0.com, 最终通过解析163.xdwscache.ourglb0.com的域名获得实际IP有两个。

** FQDN
完整域名，例如: ntp01.abc.com，FQDN为: ntp01.abc.com. ， 主机部分为ntp01。 如果在/etc/resolv.conf中配置了search abc.com，此时ping ntp01与ntp01.abc.com均可返回对应的IP地址。实际使用建议采用完整域名，减少可能发生的分歧。

* 实际架构
** 一主两从
Bind name server采用一主两从模式。Master修改zone文件后，通过信令自动同步至slave服务器。首次安装完成后，slave服务器不再做任何变更，所有变更操作均在master服务器上完成。Master服务器不向外暴露，只有两个slave服务器提供查询服务。

** VIEW功能
Bind name server 启用VIEW功能。举个例子，针对ntp01.abc.com的请求，如果客户端源地址是192.168.11.126，此时命中acl sc，将返回sc-view中对应的纪录，此时读取的zone文件是sc.named.abc.com。如果客户端源地址是172.16.138.71，此时命中的acl oa，将返回oa-view中对应的纪录，此时读取的zone文件为oa.named.abc.com。

** 禁用forward
由于是一个封闭的系统，不启用forward功能，所有纪录都通过本地文件或缓存解析。

** IP地址分配
- Master :: 192.168.1.63
- Slave :: 192.168.1.61/192.168.1.62

* 服务器主要配置
** 注释格式
#+BEGIN_EXAMPLE
/* This is a C-style comment */
// This is a c++-style comment
# This is a shell-style comment
#+END_EXAMPLE

** master /etc/named.conf
#+BEGIN_SRC sh
key "sc-key" {
    algorithm HMAC-MD5;
    secret "ZUZdBP96TP+bXUGA+TaVuRMLitTrxz5aM08mxd8u3mI=";
};

key "oa-key" {
    algorithm HMAC-MD5;
    secret "LZdRodIo1LCSYZMYnAta8270RFn8cUgZoL96W5LWNVU=";
};

options {
    listen-on port 53 {
        any;
    };
    directory   "/var/named";
    dump-file   "/var/named/data/cache_dump.db";
    statistics-file "/var/named/data/named_stats.txt";
    memstatistics-file "/var/named/data/named_mem_stats.txt";
    allow-query {
        any;
    };
    recursion no;
    notify explicit; // default yes, notify nameserver which has NS records
    allow-transfer {
        none;
    };
    managed-keys-directory "/var/named/dynamic";
    pid-file "/run/named/named.pid";
    session-keyfile "/run/named/session.key";
};

logging {
    channel default_debug {
        file "data/named.run";
        severity dynamic;
    };
};

acl sc {
    !key oa-key;
    key sc-key;
    localhost;
    192.168.0.0/16;
};

acl oa {
    !key sc-key;
    key oa-key;
    172.16.0.0/16;
};

view "sc-view" {
    match-clients {
        sc;
    };
    allow-transfer {
        key sc-key;
    };
    zone "abc.com" IN {
        type master;
        file "sc.named.abc.com";
        also-notify {
            192.168.1.61 key sc-key;
            192.168.1.62 key sc-key;
        };
        zone-statistics yes;
    };
};

view "oa-view" {
    match-clients {
        oa;
    };
    allow-transfer {
        key oa-key;
    };
    zone "abc.com" IN {
        type master;
        file "oa.named.abc.com";
        also-notify {
            192.168.1.61 key oa-key;
            192.168.1.62 key oa-key;
        };
        zone-statistics yes;
    };
};

controls {
    inet 127.0.0.1 port 953 allow {
        127.0.0.1;
    };
};

statistics-channels {
    inet 0.0.0.0 port 8053 allow {
        localhost;
        192.168.11.0/24;
    };
};
#+END_SRC

** slave /etc/named.conf
#+BEGIN_SRC sh
key "sc-key" {
    algorithm HMAC-MD5;
    secret "ZUZdBP96TP+bXUGA+TaVuRMLitTrxz5aM08mxd8u3mI=";
};

key "oa-key" {
    algorithm HMAC-MD5;
    secret "LZdRodIo1LCSYZMYnAta8270RFn8cUgZoL96W5LWNVU=";
};

options {
    listen-on port 53 {
        any;
    };
    directory   "/var/named";
    dump-file   "/var/named/data/cache_dump.db";
    statistics-file "/var/named/data/named_stats.txt";
    memstatistics-file "/var/named/data/named_mem_stats.txt";
    allow-query {
        any;
    };
    allow-transfer {
        none;
    };
    recursion no;
    notify explicit;
    managed-keys-directory "/var/named/dynamic";
    pid-file "/run/named/named.pid";
    session-keyfile "/run/named/session.key";
};

logging {
    channel default_debug {
        file "data/named.run";
        severity dynamic;
    };
};

acl sc {
    !key oa-key;
    key sc-key;
    127.0.0.0/8;
    192.168.0.0/16;
};

acl oa {
    !key sc-key;
    key oa-key;
    172.16.0.0/16;
};

view "sc-view" {
    match-clients {
        sc;
    };
    zone "abc.com" IN {
        file "slaves/bak.sc.named.abc.com";
        type slave;
        masterfile-format text;
        masters {
            192.168.1.63 key sc-key;
        };
        zone-statistics yes;
    };
};

view "oa-view" {
    match-clients {
        oa;
    };

    zone "abc.com" IN {
        file "slaves/bak.oa.named.abc.com";
        type slave;
        masterfile-format text;
        masters {
            192.168.1.63 key oa-key;
        };
        zone-statistics yes;
    };
};

controls {
    inet 127.0.0.1 port 953 allow {
        127.0.0.1;
    };
};

statistics-channels {
    inet 0.0.0.0 port 8053 allow {
        localhost;
        192.168.11.0/24;
    };
};
#+END_SRC

** zone文件
*** 位置
- master :: /var/named
- slave: :: /var/named/slaves

*** 示例
#+BEGIN_SRC sh
$TTL 1D
@       IN SOA  @ wanglifeng_abc.com. (
                                        2016071908       ; serial YYYYMMDDNN
                                        1D      ; refresh
                                        1H      ; retry
                                        30D     ; expire
                                        3H )    ; negative caching ttl
@                                       IN NS  ns00.abc.com.
@                                       IN NS  ns01.abc.com.
@                                       IN NS  ns02.abc.com.
ns00.abc.com. IN A 192.168.1.63
ns01.abc.com. IN A 192.168.1.61
ns02.abc.com. IN A 192.168.1.62
ntp01   IN      A  192.168.4.11
ntp02   IN      A  192.168.4.12
#+END_SRC

*** 域名规范
域名建议采用如下格式:
#+BEGIN_SRC sh
A.B.C.abc.com
#+END_SRC
其中A代表主机名称，B代表应用名称,C代表环境(test,dev，生产环境为空)，例如:
#+BEGIN_SRC sh
db01.appname.abc.com
db01.appname.test.abc.com
#+END_SRC

一些公共环境，可以省略应用名称，例如:
#+BEGIN_SRC sh
ntp01.abc.com
ftp.abc.com
lb01.abc.com
lb01.test.abc.com
#+END_SRC

zone文件维护:
- 建议按照IP地址大小，按升序排列
- 所有域名采用小写
- 第一个与第二个字段采用三个tab分隔，后面的字段单个TAB分隔

* 客户端配置
** 卸载NetworkManager
Redhat/Centos系列，一般建议不管是否配置DNS均卸载如下三个软件包:
#+BEGIN_SRC sh
yum -y remove NetworkManager-tui NetworkManager-libnm NetworkManager
#+END_SRC

** /etc/resolv.conf
修改/etc/resolv.conf, 包含如下内容，虽然domain与search两者互斥，last one wins，但此处两者均配置。
#+BEGIN_SRC sh
domain abc.com
search abc.com
options rotate timeout:1 attempts:4
nameserver 192.168.1.61
nameserver 192.168.1.62
#+END_SRC
* 日常维护
** 增加纪录
例如ftp.abc.com, 对应生产IP 192.168.193.127，办公IP 172.16.2.150
操作步骤如下：
*** 修改sc.named.abc.com
#+BEGIN_SRC sh
192.168.193.127    IN    A     ftp
#+END_SRC

*** 修改oa.named.abc.com
#+BEGIN_SRC sh
172.16.2.150    IN    A     ftp
#+END_SRC

*** 修改SERIAL
zone文件其中有一行标志文件的版本号，添加纪录时，需增加SERIAL的值，此时bind服务器才会认为对此文件做了更新，从而让新zone生效。此处SERIAL的值采用的格式为YYYYMMDDNN，例如2016072001, 表示2016年7月20日的第一次更新，因为计数器的长度只有2^32，所以无法添加小时与分钟，而改用当天修改的次数来表示。

*** 查看前后差异
登录ns00，通过如下命令可查看配置文件与已提交版本差异：
#+BEGIN_SRC sh
cd /root/dns
sh backupdns.sh
git diff --color
#+END_SRC

*** 重新加载文件
#+BEGIN_SRC sh
rndc reload
#+END_SRC

添加纪录，并递增序列号后，需要通过来重新加载配置。 一般不建议通过重启named服务来重新加载配置。

** 备份
#+BEGIN_SRC sh
#!/bin/sh

LOGFILE=/var/log/backupdns.log

#redirect STDOUT and STDERR to file
exec 4<&1
exec 5<&2
exec 1>>$LOGFILE
exec 2>>$LOGFILE

echo "-------------------------------------------------------------------------"
echo $(date -u) " - start backup dns configuration"
echo "-------------------------------------------------------------------------"

/usr/bin/rsync -avz /var/named/sc.named.abc.com /root/dns/
/usr/bin/rsync -avz /var/named/oa.named.abc.com /root/dns/
/usr/bin/rsync -avz /etc/named.conf /root/dns/master.named.conf
/usr/bin/rsync -avz root@ns01.abc.com:/etc/named.conf /root/dns/slave01.named.conf
/usr/bin/rsync -avz root@ns02.abc.com:/etc/named.conf /root/dns/slave02.named.conf
/usr/bin/rsync -avz /root/dns/ root@ns01.abc.com:/root/dns/
/usr/bin/rsync -avz /root/dns/ root@ns02.abc.com:/root/dns/

echo "-------------------------------------------------------------------------"
echo $(date -u) " - finish backup dns configuration"
echo "-------------------------------------------------------------------------"

exec 1<&4
exec 2<&5
#+END_SRC

通过定时作业运行，除将主要文件备份至本地外，在两台slave服务器上各留存了一份。
为了方便后期对历史纪录进行回溯，建议通过如下命令将配置文件加入版本控制

#+BEGIN_SRC sh
cd /root/dns
git init
git add -A .
git status
git commit
#+END_SRC

加入此版本变更说明，比如：
#+BEGIN_SRC sh
serial 2016072001

- type A: 192.168.4.11 => ntp01
- type A: 192.168.4.12 => ntp02
- type A: 192.168.193.127 => ftp.test
#+END_SRC

目前已经提交了一个版本，信息如下：
#+BEGIN_SRC sh
[root@ns00 dns]# git log
commit dc890ae944826d0e060e12b9ca704f92228afc10
Author: wanglifeng_hz <wanglifeng_abc.com>
Date:   Fri Jul 22 09:41:59 2016 +0800

    initial commit

    sc.abc.com:
    ------------------------------------------------------------
    ntp01                       IN      A       192.168.4.11
    ntp02                       IN      A       192.168.4.12
    ftp.test                    IN      A       192.168.193.127

    oa.abc.com
    ------------------------------------------------------------
    ntp01                       IN      A       172.16.2.200
    ftp.test                    IN      A       172.16.2.150
#+END_SRC

后续可以通过 ~git log~ 命令查看历史变更情况，同时通过 ~checkout~ 回退至任何版本。

** 监控
较新版本的bind服务器支持通过http协议暴露出一些DNS服务器的计数器，方便监控与统计分析。访问的网址为http://192.168.1.61:8053 . 当重启DNS服务器时，计数器将被清空。为方便对历史数据进行统计分析，在三台DNS服务器上安装了zabbix-agent，由zabbix-server定期采集数据。具体的报表由grafana dashboard展示，链接地址为：http://192.168.11.150:3000

** 日志文件
- /var/named/data/named.run
- /var/log/message
** 诊断工具
可以通过在客户端安装bind-utils包用于DNS服务器的诊断，包含dig, nslookup等命令行工具。
#+BEGIN_SRC sh
dig -t A @192.168.1.61 ntp01.abc.com
dig -t SOA @192.168.1.61 ntp01.abc.com
dig -t NS @192.168.1.61 ntp01.abc.com
#+END_SRC

* ansible自动安装脚本
[[https://github.com/wanglf/ansible-playbook/tree/master/roles/bind][Bind playbook]]

* 最佳实践
** 最小化重启
利用 ~rndc reload~ 单个zone

** 隐藏primary server
只有slave server对外提供查询功能，master server只用于配置变更。
* 参考资料
1. [[http://linux.vbird.org/linux_server/0350dns.php][鸟哥的私房菜-DNS伺服器]]
2. [[http://shop.oreilly.com/product/9780596100575.do][DNS and BIND, 5th Edition By Cricket Liu, Paul Albitz.]]
